#include <stdio.h>
#include <stdlib.h>

#define BLOCK_SIZE 128  // Define the block size as 128 bytes

void display_block(unsigned char *block, size_t size);

int main(int argc, char *argv[]) {
  if (argc != 2) {
    fprintf(stderr, "Usage: %s <filename>\n",
            argv[0]);  // Check for correct argument usage
    return EXIT_FAILURE;
  }

  FILE *file = fopen(argv[1], "rb");  // Open the file in binary mode
  if (!file) {
    perror("Error opening file");
    return EXIT_FAILURE;
  }

  unsigned char buffer[BLOCK_SIZE];  // Buffer to hold file data
  size_t bytes_read;

  // Read the file in blocks of BLOCK_SIZE
  while ((bytes_read = fread(buffer, 1, BLOCK_SIZE, file)) > 0) {
    display_block(buffer, bytes_read);  // Display each block
  }

  if (ferror(file)) {  // Check for reading errors
    perror("Error reading file");
    fclose(file);
    return EXIT_FAILURE;
  }

  fclose(file);  // Close the file
  return EXIT_SUCCESS;
}
void display_block(unsigned char *block, size_t size) {
  for (size_t i = 0; i < size; i++) {
    printf("%02X ", block[i]);  // Print each byte in hex format
  }
